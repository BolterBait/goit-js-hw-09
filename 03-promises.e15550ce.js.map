{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEoBC,SAASC,cAAc,SAC/BC,iBAAiB,UAE7B,SAAoBC,GAChBA,EAAEC,iBAKF,IAJA,IAAMC,EAAOF,EAAEG,cACTC,EAASC,OAAOH,EAAKI,SAASF,OAAOG,OACvCC,EAAaH,OAAOH,EAAKI,SAASG,MAAMF,OACtCG,EAAYL,OAAOH,EAAKI,SAASK,KAAKJ,OACnCK,EAAU,EAAGA,GAAWR,EAAQQ,GAAU,EAAG,CAEtD,SAASC,EAAcC,EAASC,GAC9B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC7B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,GACJF,EAAQ,CAAEH,UAASC,cAErBG,EAAO,CAAEJ,UAASC,a,GACfP,E,IAGPK,EAAcD,EAASF,GACtBa,MAAK,SAAAC,G,IAAGV,EAAOU,EAAPV,QAASC,EAASS,EAATT,UAChBU,EAAA9B,GAAS+B,OAAOC,KAAK,uBAAuCC,OAAdd,EAAQ,QAAgBc,OAAVb,EAAU,M,IAEvEc,OAAM,SAAAL,G,IAAGV,EAAOU,EAAPV,QAASC,EAASS,EAATT,UACjBU,EAAA9B,GAAS+B,OAAOI,QAAQ,sBAAoCF,OAAdd,EAAQ,QAAgBc,OAAVb,EAAU,M,IACrEgB,SAAQ,W,OAAM7B,EAAK8B,O,IACtBxB,GAAcE,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst promiseForm = document.querySelector('.form');\npromiseForm.addEventListener('submit', onClickBtn);\n\nfunction onClickBtn(e) {\n    e.preventDefault();\n    const form = e.currentTarget; \n    const amount = Number(form.elements.amount.value);\n    let firstDelay = Number(form.elements.delay.value);\n    const delayStep = Number(form.elements.step.value);\n    for (let counter = 1; counter <= amount; counter +=1) {\n      \n    function createPromise(counter, delayStep) {\n      return new Promise((resolve, reject) => {   \n      const shouldResolve = Math.random() > 0.3;\n      setTimeout(() => {\n        if (shouldResolve) {\n        resolve({ counter, delayStep });\n  }\n      reject({ counter, delayStep });\n      }, firstDelay);\n   });\n     }   \n  createPromise(counter, delayStep)\n  .then(({ counter, delayStep }) => {\n    Notiflix.Notify.info(`✅ Fulfilled promise ${counter} in ${delayStep}ms`);\n  })\n  .catch(({ counter, delayStep }) => {\n    Notiflix.Notify.warning(`❌ Rejected promise ${counter} in ${delayStep}ms`);\n  }).finally(() => form.reset());\n  firstDelay += delayStep;\n  }\n}"],"names":["$iU1Pc","parcelRequire","document","querySelector","addEventListener","e","preventDefault","form","currentTarget","amount","Number","elements","value","firstDelay","delay","delayStep1","step","counter1","createPromise","counter","delayStep","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","then","param","$parcel$interopDefault","Notify","info","concat","catch","warning","finally","reset"],"version":3,"file":"03-promises.e15550ce.js.map"}